/*
Écrire une règle pour que l'élément `<body>` ait des marges extérieures (`margin`) de `0` pixel.
*/
body {
  margin: 0; 
}

/*
Écrire une règle pour que les éléments `<section>` aient des marges intérieures (`padding`) de `30` pixels.
*/
section {
  padding: 30px;
} 
/*
Écrire une règle pour que les éléments `<h3>` soient alignés horizontalement avec le centre du document, voir l'attribut "text-align".
*/
h3 {
  text-align: center;
}

/*
Écrire les règles suivantes pour l'élément `<h2>` à l'intérieur du `<nav>` :
  - Des marges intérieures égales à `0` pixel.
  - Des marges extérieures égales à `20` pixels.
*/
nav h2 
{
  padding:0;
  margin: 20px;
}


/* 
- Écrire les règles suivantes pour les éléments `<ul>` à l'intérieur du `<nav>` :
  - Des marges intérieures égales à `20` pixels.
  - Des marges extérieures égales à `0` pixel.
  - Enlever les puces sur chaque ligne avec la propriété `list-style`.
*/
nav ul {
  margin: 0;
  list-style: none;
  padding: 20px;
}

/*
Dans cette partie, nous allons changer le titre `<h2>` et la liste `<ul>` en "conteneurs flexible" pour que leurs enfants soit affichés 
en ligne malgrés leur affichage de type `block`.
(pour en savoir plus sur les flexbox, [cliquez ici](https://developer.mozilla.org/fr/docs/Web/CSS/CSS_Flexible_Box_Layout/Concepts_de_base_flexbox#Le_conteneur_flexible)).

Écrire une class pour changer l'affichage (`display`) en `flex` et appliquer cette classe 
aux éléments <nav>` et `<ul>` dans la page html.
*/
nav ul {
  display: flex;
}

/*
- Écrire les règles suivantes pour les éléments `<li>` enfants de l'élément `<nav>`:
  - Écrire une règle pour ajouter une marge extérieure de `15` pixels **à gauche**
  - Écrire une règle pour ajouter une marge intérieure de `20` pixels
*/
nav li {
  margin-left: 15px;
  padding: 20px;
}

/*
Écrire une règle pour que l'élément <h2> enfant de <nav> aient une marge intérieure de 15px.
*/
nav h2 {
  padding: 15px;
}


/*
Pour en savoir plus sur la définition de couleurs en CSS, [cliquez ici](https://developer.mozilla.org/fr/docs/Web/CSS/Type_color#Les_couleurs_RGB). 
Essayez de modifier les trois valeurs de `rgb(0, 0, 0)` et constatez les changements dans le navigateur. Remettez la couleur en noir avant de passer à la suite.

Écrire une règle pour changer la couleur des ancres (éléments `<a>`) en noir (`black` ou `rgb(0, 0, 0)`).
*/
a {
  color: #000;  
}

/*
Écrire une règle pour que les images aient une largeur égale à `300` pixels.
Écrire une règle pour que les images aient des coins arrondis de `10` pixels avec la propriété `border-radius`.
*/
.image {
  width: 300px;
  border-radius: 10px;
}


/*
Écrire une règle pour que les sections titrées "Ville" et "Grands espaces" aient une couleur de fond égale à `rgb(4, 117, 186)`.
*/
#ville, #espace {
  background-color: rgb(4, 117, 186)
}

/*             BONUS !!                   */

/*
Écrire les règles nécessaires pour aligner au centre les paragraphes et les images.
Une façon de centrer les images est de les afficher en block:
	display: block;
	margin-left: auto;
	margin-right: auto;
*/
img {
display: block;
margin-left: auto;
margin-right: auto;
}

p {
text-align: center;
}
/*
Écrire les règles nécessaires pour que les ancres dans le `<nav>` changent de couleur et ne soient plus soulignées quand le curseur de la souris passe dessus.
Rechercher l'attribut "text-decoration"
*/

nav a:hover {
color: red;
text-decoration:none;
}

